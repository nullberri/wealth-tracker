{"version":3,"file":"mutative-SUdGWNRE.js","sources":["../../node_modules/mutative/dist/mutative.esm.mjs"],"sourcesContent":["const Operation = {\n    Remove: 'remove',\n    Replace: 'replace',\n    Add: 'add',\n};\n\n// Don't use `Symbol()` just for 3rd party access the draft\nconst PROXY_DRAFT = Symbol.for('__MUTATIVE_PROXY_DRAFT__');\nconst RAW_RETURN_SYMBOL = Symbol('__MUTATIVE_RAW_RETURN_SYMBOL__');\nconst iteratorSymbol = Symbol.iterator;\nconst dataTypes = {\n    mutable: 'mutable',\n    immutable: 'immutable',\n};\n\nconst internal = {};\n\nfunction latest(proxyDraft) {\n    var _a;\n    return (_a = proxyDraft.copy) !== null && _a !== void 0 ? _a : proxyDraft.original;\n}\n/**\n * Check if the value is a draft\n */\nfunction isDraft(target) {\n    return !!getProxyDraft(target);\n}\nfunction getProxyDraft(value) {\n    if (typeof value !== 'object')\n        return null;\n    return value === null || value === void 0 ? void 0 : value[PROXY_DRAFT];\n}\nfunction getValue(value) {\n    var _a;\n    const proxyDraft = getProxyDraft(value);\n    return proxyDraft ? (_a = proxyDraft.copy) !== null && _a !== void 0 ? _a : proxyDraft.original : value;\n}\n/**\n * Check if a value is draftable\n */\nfunction isDraftable(value, options) {\n    if (!value || typeof value !== 'object')\n        return false;\n    let markResult;\n    return (Object.getPrototypeOf(value) === Object.prototype ||\n        Array.isArray(value) ||\n        value instanceof Map ||\n        value instanceof Set ||\n        (!!(options === null || options === void 0 ? void 0 : options.mark) &&\n            ((markResult = options.mark(value, dataTypes)) === dataTypes.immutable ||\n                typeof markResult === 'function')));\n}\nfunction getPath(target, path = []) {\n    if (Object.hasOwnProperty.call(target, 'key')) {\n        // check if the parent is a draft and the original value is not equal to the current value\n        const proxyDraft = getProxyDraft(get(target.parent.copy, target.key));\n        if (proxyDraft !== null && (proxyDraft === null || proxyDraft === void 0 ? void 0 : proxyDraft.original) !== target.original) {\n            return null;\n        }\n        path.push(target.parent.type === 3 /* DraftType.Set */\n            ? Array.from(target.parent.setMap.keys()).indexOf(target.key)\n            : target.key);\n    }\n    if (target.parent) {\n        return getPath(target.parent, path);\n    }\n    return path.reverse();\n}\nfunction getType(target) {\n    if (Array.isArray(target))\n        return 1 /* DraftType.Array */;\n    if (target instanceof Map)\n        return 2 /* DraftType.Map */;\n    if (target instanceof Set)\n        return 3 /* DraftType.Set */;\n    return 0 /* DraftType.Object */;\n}\nfunction get(target, key) {\n    return getType(target) === 2 /* DraftType.Map */ ? target.get(key) : target[key];\n}\nfunction set(target, key, value) {\n    const type = getType(target);\n    if (type === 2 /* DraftType.Map */) {\n        target.set(key, value);\n    }\n    else {\n        target[key] = value;\n    }\n}\nfunction peek(target, key) {\n    const state = getProxyDraft(target);\n    const source = state ? latest(state) : target;\n    return source[key];\n}\nfunction isEqual(x, y) {\n    if (x === y) {\n        return x !== 0 || 1 / x === 1 / y;\n    }\n    else {\n        return x !== x && y !== y;\n    }\n}\nfunction revokeProxy(proxyDraft) {\n    if (!proxyDraft)\n        return;\n    while (proxyDraft.finalities.revoke.length > 0) {\n        const revoke = proxyDraft.finalities.revoke.pop();\n        revoke();\n    }\n}\n// handle JSON Pointer path with spec https://www.rfc-editor.org/rfc/rfc6901\nfunction escapePath(path, pathAsArray) {\n    return pathAsArray\n        ? path\n        : ['']\n            .concat(path)\n            .map((_item) => {\n            const item = `${_item}`;\n            if (item.indexOf('/') === -1 && item.indexOf('~') === -1)\n                return item;\n            return item.replace(/~/g, '~0').replace(/\\//g, '~1');\n        })\n            .join('/');\n}\nfunction unescapePath(path) {\n    if (Array.isArray(path))\n        return path;\n    return path\n        .split('/')\n        .map((_item) => _item.replace(/~1/g, '/').replace(/~0/g, '~'))\n        .slice(1);\n}\n\nfunction strictCopy(target) {\n    const copy = Object.create(Object.getPrototypeOf(target));\n    Reflect.ownKeys(target).forEach((key) => {\n        let desc = Reflect.getOwnPropertyDescriptor(target, key);\n        if (desc.enumerable && desc.configurable && desc.writable) {\n            copy[key] = target[key];\n            return;\n        }\n        // for freeze\n        if (!desc.writable) {\n            desc.writable = true;\n            desc.configurable = true;\n        }\n        if (desc.get || desc.set)\n            desc = {\n                configurable: true,\n                writable: true,\n                enumerable: desc.enumerable,\n                value: target[key],\n            };\n        Reflect.defineProperty(copy, key, desc);\n    });\n    return copy;\n}\nconst propIsEnum = Object.prototype.propertyIsEnumerable;\nfunction shallowCopy(original, options) {\n    let markResult;\n    if (Array.isArray(original)) {\n        return Array.prototype.concat.call(original);\n    }\n    else if (original instanceof Set) {\n        return new Set(original.values());\n    }\n    else if (original instanceof Map) {\n        return new Map(original);\n    }\n    else if ((options === null || options === void 0 ? void 0 : options.mark) &&\n        ((markResult = options.mark(original, dataTypes)),\n            markResult !== undefined) &&\n        markResult !== dataTypes.mutable) {\n        if (markResult === dataTypes.immutable) {\n            return strictCopy(original);\n        }\n        else if (typeof markResult === 'function') {\n            if ((options.enablePatches || options.enableAutoFreeze)) {\n                throw new Error(`You can't use mark and patches or auto freeze together.`);\n            }\n            return markResult();\n        }\n        throw new Error(`Unsupported mark result: ${markResult}`);\n    }\n    else if (typeof original === 'object' &&\n        Object.getPrototypeOf(original) === Object.prototype) {\n        // For best performance with shallow copies,\n        // don't use `Object.create(Object.getPrototypeOf(obj), Object.getOwnPropertyDescriptors(obj));` by default.\n        const copy = {};\n        Object.keys(original).forEach((key) => {\n            copy[key] = original[key];\n        });\n        Object.getOwnPropertySymbols(original).forEach((key) => {\n            if (propIsEnum.call(original, key)) {\n                copy[key] = original[key];\n            }\n        });\n        return copy;\n    }\n    else {\n        throw new Error(`Please check mark() to ensure that it is a stable marker draftable function.`);\n    }\n}\nfunction ensureShallowCopy(target) {\n    if (target.copy)\n        return;\n    target.copy = shallowCopy(target.original, target.options);\n}\nfunction deepClone(target) {\n    if (!isDraftable(target))\n        return getValue(target);\n    if (Array.isArray(target))\n        return target.map(deepClone);\n    if (target instanceof Map)\n        return new Map(Array.from(target.entries()).map(([k, v]) => [k, deepClone(v)]));\n    if (target instanceof Set)\n        return new Set(Array.from(target).map(deepClone));\n    const copy = Object.create(Object.getPrototypeOf(target));\n    for (const key in target)\n        copy[key] = deepClone(target[key]);\n    return copy;\n}\nfunction cloneIfNeeded(target) {\n    return isDraft(target) ? deepClone(target) : target;\n}\n\nfunction markChanged(proxyDraft) {\n    var _a;\n    proxyDraft.assignedMap = (_a = proxyDraft.assignedMap) !== null && _a !== void 0 ? _a : new Map();\n    if (!proxyDraft.operated) {\n        proxyDraft.operated = true;\n        if (proxyDraft.parent) {\n            markChanged(proxyDraft.parent);\n        }\n    }\n}\n\nfunction throwFrozenError() {\n    throw new Error('Cannot modify frozen object');\n}\nfunction deepFreeze(target, subKey, updatedValues, stack, keys) {\n    {\n        updatedValues = updatedValues !== null && updatedValues !== void 0 ? updatedValues : new WeakMap();\n        stack = stack !== null && stack !== void 0 ? stack : [];\n        keys = keys !== null && keys !== void 0 ? keys : [];\n        const value = updatedValues.has(target)\n            ? updatedValues.get(target)\n            : target;\n        if (stack.length > 0) {\n            const index = stack.indexOf(value);\n            if (value && typeof value === 'object' && index !== -1) {\n                if (stack[0] === value) {\n                    throw new Error(`Forbids circular reference`);\n                }\n                throw new Error(`Forbids circular reference: ~/${keys\n                    .slice(0, index)\n                    .map((key, index) => {\n                    if (typeof key === 'symbol')\n                        return `[${key.toString()}]`;\n                    const parent = stack[index];\n                    if (typeof key === 'object' &&\n                        (parent instanceof Map || parent instanceof Set))\n                        return Array.from(parent.keys()).indexOf(key);\n                    return key;\n                })\n                    .join('/')}`);\n            }\n            stack.push(value);\n            keys.push(subKey);\n        }\n        else {\n            stack.push(value);\n        }\n    }\n    if (Object.isFrozen(target) || isDraft(target)) {\n        {\n            stack.pop();\n            keys.pop();\n        }\n        return;\n    }\n    const type = getType(target);\n    switch (type) {\n        case 2 /* DraftType.Map */:\n            for (const [key, value] of target) {\n                deepFreeze(key, key, updatedValues, stack, keys);\n                deepFreeze(value, key, updatedValues, stack, keys);\n            }\n            target.set = target.clear = target.delete = throwFrozenError;\n            break;\n        case 3 /* DraftType.Set */:\n            for (const value of target) {\n                deepFreeze(value, value, updatedValues, stack, keys);\n            }\n            target.add = target.clear = target.delete = throwFrozenError;\n            break;\n        case 1 /* DraftType.Array */:\n            Object.freeze(target);\n            let index = 0;\n            for (const value of target) {\n                deepFreeze(value, index, updatedValues, stack, keys);\n                index += 1;\n            }\n            break;\n        default:\n            Object.freeze(target);\n            // ignore non-enumerable or symbol properties\n            Object.keys(target).forEach((name) => {\n                const value = target[name];\n                deepFreeze(value, name, updatedValues, stack, keys);\n            });\n    }\n    {\n        stack.pop();\n        keys.pop();\n    }\n}\n\nfunction has(target, key) {\n    return target instanceof Map\n        ? target.has(key)\n        : Object.prototype.hasOwnProperty.call(target, key);\n}\nfunction getDescriptor(target, key) {\n    if (key in target) {\n        let prototype = Reflect.getPrototypeOf(target);\n        while (prototype) {\n            const descriptor = Reflect.getOwnPropertyDescriptor(prototype, key);\n            if (descriptor)\n                return descriptor;\n            prototype = Reflect.getPrototypeOf(prototype);\n        }\n    }\n    return;\n}\n\nfunction forEach(target, iter) {\n    const type = getType(target);\n    if (type === 0 /* DraftType.Object */) {\n        Reflect.ownKeys(target).forEach((key) => {\n            iter(key, target[key], target);\n        });\n    }\n    else if (type === 1 /* DraftType.Array */) {\n        let index = 0;\n        for (const entry of target) {\n            iter(index, entry, target);\n            index += 1;\n        }\n    }\n    else {\n        target.forEach((entry, index) => iter(index, entry, target));\n    }\n}\n\nfunction handleValue(target, handledSet) {\n    if (isDraft(target) ||\n        !isDraftable(target) ||\n        handledSet.has(target) ||\n        Object.isFrozen(target))\n        return;\n    const isSet = target instanceof Set;\n    const setMap = isSet ? new Map() : undefined;\n    handledSet.add(target);\n    forEach(target, (key, value) => {\n        var _a;\n        if (isDraft(value)) {\n            const proxyDraft = getProxyDraft(value);\n            ensureShallowCopy(proxyDraft);\n            // A draft where a child node has been changed, or assigned a value\n            const updatedValue = ((_a = proxyDraft.assignedMap) === null || _a === void 0 ? void 0 : _a.size) || proxyDraft.operated\n                ? proxyDraft.copy\n                : proxyDraft.original;\n            // final update value\n            set(isSet ? setMap : target, key, updatedValue);\n        }\n        else {\n            handleValue(value, handledSet);\n        }\n    });\n    if (setMap) {\n        const set = target;\n        const values = Array.from(set);\n        set.clear();\n        values.forEach((value) => {\n            set.add(setMap.has(value) ? setMap.get(value) : value);\n        });\n    }\n}\nfunction finalizeAssigned(proxyDraft, key) {\n    // handle the draftable assigned values， and the value is not a draft\n    const copy = proxyDraft.type === 3 /* DraftType.Set */ ? proxyDraft.setMap : proxyDraft.copy;\n    if (proxyDraft.finalities.revoke.length > 1 &&\n        proxyDraft.assignedMap.get(key) &&\n        copy) {\n        handleValue(get(copy, key), proxyDraft.finalities.handledSet);\n    }\n}\nfunction finalizeSetValue(target) {\n    if (target.type === 3 /* DraftType.Set */ && target.copy) {\n        target.copy.clear();\n        target.setMap.forEach((value) => {\n            target.copy.add(getValue(value));\n        });\n    }\n}\nfunction finalizePatches(target, generatePatches, patches, inversePatches) {\n    const shouldFinalize = target.operated &&\n        target.assignedMap &&\n        target.assignedMap.size > 0 &&\n        !target.finalized;\n    if (shouldFinalize) {\n        if (patches && inversePatches) {\n            const basePath = getPath(target);\n            if (basePath) {\n                generatePatches(target, basePath, patches, inversePatches);\n            }\n        }\n        target.finalized = true;\n    }\n}\nfunction markFinalization(target, key, value, generatePatches) {\n    const proxyDraft = getProxyDraft(value);\n    if (proxyDraft) {\n        // !case: assign the draft value\n        if (!proxyDraft.callbacks) {\n            proxyDraft.callbacks = [];\n        }\n        proxyDraft.callbacks.push((patches, inversePatches) => {\n            var _a;\n            const copy = target.type === 3 /* DraftType.Set */ ? target.setMap : target.copy;\n            if (isEqual(get(copy, key), value)) {\n                let updatedValue = proxyDraft.original;\n                if (proxyDraft.copy) {\n                    updatedValue = proxyDraft.copy;\n                }\n                finalizeSetValue(target);\n                finalizePatches(target, generatePatches, patches, inversePatches);\n                if (target.options.enableAutoFreeze) {\n                    target.options.updatedValues =\n                        (_a = target.options.updatedValues) !== null && _a !== void 0 ? _a : new WeakMap();\n                    target.options.updatedValues.set(updatedValue, proxyDraft.original);\n                }\n                // final update value\n                set(copy, key, updatedValue);\n            }\n        });\n        if (target.options.enableAutoFreeze) {\n            // !case: assign the draft value in cross draft tree\n            if (proxyDraft.finalities !== target.finalities) {\n                target.options.enableAutoFreeze = false;\n            }\n        }\n    }\n    if (isDraftable(value, target.options)) {\n        // !case: assign the non-draft value\n        target.finalities.draft.push(() => {\n            const copy = target.type === 3 /* DraftType.Set */ ? target.setMap : target.copy;\n            if (isEqual(get(copy, key), value)) {\n                finalizeAssigned(target, key);\n            }\n        });\n    }\n}\n\nfunction generateArrayPatches(proxyState, basePath, patches, inversePatches, pathAsArray) {\n    let { original, assignedMap, options } = proxyState;\n    let copy = proxyState.copy;\n    if (copy.length < original.length) {\n        [original, copy] = [copy, original];\n        [patches, inversePatches] = [inversePatches, patches];\n    }\n    for (let index = 0; index < original.length; index += 1) {\n        if (assignedMap.get(index.toString()) && copy[index] !== original[index]) {\n            const _path = basePath.concat([index]);\n            const path = escapePath(_path, pathAsArray);\n            patches.push({\n                op: Operation.Replace,\n                path,\n                // If it is a draft, it needs to be deep cloned, and it may also be non-draft.\n                value: cloneIfNeeded(copy[index]),\n            });\n            inversePatches.push({\n                op: Operation.Replace,\n                path,\n                // If it is a draft, it needs to be deep cloned, and it may also be non-draft.\n                value: cloneIfNeeded(original[index]),\n            });\n        }\n    }\n    for (let index = original.length; index < copy.length; index += 1) {\n        const _path = basePath.concat([index]);\n        const path = escapePath(_path, pathAsArray);\n        patches.push({\n            op: Operation.Add,\n            path,\n            // If it is a draft, it needs to be deep cloned, and it may also be non-draft.\n            value: cloneIfNeeded(copy[index]),\n        });\n    }\n    if (original.length < copy.length) {\n        // https://www.rfc-editor.org/rfc/rfc6902#appendix-A.4\n        // For performance, here we only generate an operation that replaces the length of the array,\n        // which is inconsistent with JSON Patch specification\n        const { arrayLengthAssignment = true } = options.enablePatches;\n        if (arrayLengthAssignment) {\n            const _path = basePath.concat(['length']);\n            const path = escapePath(_path, pathAsArray);\n            inversePatches.push({\n                op: Operation.Replace,\n                path,\n                value: original.length,\n            });\n        }\n        else {\n            for (let index = copy.length; original.length < index; index -= 1) {\n                const _path = basePath.concat([index - 1]);\n                const path = escapePath(_path, pathAsArray);\n                inversePatches.push({\n                    op: Operation.Remove,\n                    path,\n                });\n            }\n        }\n    }\n}\nfunction generatePatchesFromAssigned({ original, copy, assignedMap }, basePath, patches, inversePatches, pathAsArray) {\n    assignedMap.forEach((assignedValue, key) => {\n        const originalValue = get(original, key);\n        const value = cloneIfNeeded(get(copy, key));\n        const op = !assignedValue\n            ? Operation.Remove\n            : has(original, key)\n                ? Operation.Replace\n                : Operation.Add;\n        if (isEqual(originalValue, value) && op === Operation.Replace)\n            return;\n        const _path = basePath.concat(key);\n        const path = escapePath(_path, pathAsArray);\n        patches.push(op === Operation.Remove ? { op, path } : { op, path, value });\n        inversePatches.push(op === Operation.Add\n            ? { op: Operation.Remove, path }\n            : op === Operation.Remove\n                ? { op: Operation.Add, path, value: originalValue }\n                : { op: Operation.Replace, path, value: originalValue });\n    });\n}\nfunction generateSetPatches({ original, copy }, basePath, patches, inversePatches, pathAsArray) {\n    let index = 0;\n    original.forEach((value) => {\n        if (!copy.has(value)) {\n            const _path = basePath.concat([index]);\n            const path = escapePath(_path, pathAsArray);\n            patches.push({\n                op: Operation.Remove,\n                path,\n                value,\n            });\n            inversePatches.unshift({\n                op: Operation.Add,\n                path,\n                value,\n            });\n        }\n        index += 1;\n    });\n    index = 0;\n    copy.forEach((value) => {\n        if (!original.has(value)) {\n            const _path = basePath.concat([index]);\n            const path = escapePath(_path, pathAsArray);\n            patches.push({\n                op: Operation.Add,\n                path,\n                value,\n            });\n            inversePatches.unshift({\n                op: Operation.Remove,\n                path,\n                value,\n            });\n        }\n        index += 1;\n    });\n}\nfunction generatePatches(proxyState, basePath, patches, inversePatches) {\n    const { pathAsArray = true } = proxyState.options.enablePatches;\n    switch (proxyState.type) {\n        case 0 /* DraftType.Object */:\n        case 2 /* DraftType.Map */:\n            return generatePatchesFromAssigned(proxyState, basePath, patches, inversePatches, pathAsArray);\n        case 1 /* DraftType.Array */:\n            return generateArrayPatches(proxyState, basePath, patches, inversePatches, pathAsArray);\n        case 3 /* DraftType.Set */:\n            return generateSetPatches(proxyState, basePath, patches, inversePatches, pathAsArray);\n    }\n}\n\nlet readable = false;\nconst checkReadable = (value, options, ignoreCheckDraftable = false) => {\n    if (typeof value === 'object' &&\n        value !== null &&\n        (!isDraftable(value, options) || ignoreCheckDraftable) &&\n        !readable) {\n        throw new Error(`Strict mode: Mutable data cannot be accessed directly, please use 'unsafe(callback)' wrap.`);\n    }\n};\n/**\n * `unsafe(callback)` to access mutable data directly in strict mode.\n *\n * ## Example\n *\n * ```ts\n * import { create, unsafe } from '../index';\n *\n * class Foobar {\n *   bar = 1;\n * }\n *\n * const baseState = { foobar: new Foobar() };\n * const state = create(\n *   baseState,\n *   (draft) => {\n *    unsafe(() => {\n *      draft.foobar.bar = 2;\n *    });\n *   },\n *   {\n *     strict: true,\n *   }\n * );\n *\n * expect(state).toBe(baseState);\n * expect(state.foobar).toBe(baseState.foobar);\n * expect(state.foobar.bar).toBe(2);\n * ```\n */\nfunction unsafe(callback) {\n    readable = true;\n    let result;\n    try {\n        result = callback();\n    }\n    finally {\n        readable = false;\n    }\n    return result;\n}\n\nconst mapHandler = {\n    get size() {\n        const current = latest(getProxyDraft(this));\n        return current.size;\n    },\n    has(key) {\n        return latest(getProxyDraft(this)).has(key);\n    },\n    set(key, value) {\n        const target = getProxyDraft(this);\n        const source = latest(target);\n        if (!source.has(key) || !isEqual(source.get(key), value)) {\n            ensureShallowCopy(target);\n            markChanged(target);\n            target.assignedMap.set(key, true);\n            target.copy.set(key, value);\n            markFinalization(target, key, value, generatePatches);\n        }\n        return this;\n    },\n    delete(key) {\n        if (!this.has(key)) {\n            return false;\n        }\n        const target = getProxyDraft(this);\n        ensureShallowCopy(target);\n        markChanged(target);\n        if (target.original.has(key)) {\n            target.assignedMap.set(key, false);\n        }\n        else {\n            target.assignedMap.delete(key);\n        }\n        target.copy.delete(key);\n        return true;\n    },\n    clear() {\n        const target = getProxyDraft(this);\n        if (!this.size)\n            return;\n        ensureShallowCopy(target);\n        markChanged(target);\n        target.assignedMap = new Map();\n        for (const [key] of target.original) {\n            target.assignedMap.set(key, false);\n        }\n        target.copy.clear();\n    },\n    forEach(callback, thisArg) {\n        const target = getProxyDraft(this);\n        latest(target).forEach((_value, _key) => {\n            callback.call(thisArg, this.get(_key), _key, this);\n        });\n    },\n    get(key) {\n        var _a, _b;\n        const target = getProxyDraft(this);\n        const value = latest(target).get(key);\n        const mutable = ((_b = (_a = target.options).mark) === null || _b === void 0 ? void 0 : _b.call(_a, value, dataTypes)) === dataTypes.mutable;\n        if (target.options.strict) {\n            checkReadable(value, target.options, mutable);\n        }\n        if (mutable) {\n            return value;\n        }\n        if (target.finalized || !isDraftable(value, target.options)) {\n            return value;\n        }\n        // drafted or reassigned\n        if (value !== target.original.get(key)) {\n            return value;\n        }\n        const draft = internal.createDraft({\n            original: value,\n            parentDraft: target,\n            key,\n            finalities: target.finalities,\n            options: target.options,\n        });\n        ensureShallowCopy(target);\n        target.copy.set(key, draft);\n        return draft;\n    },\n    keys() {\n        return latest(getProxyDraft(this)).keys();\n    },\n    values() {\n        const iterator = this.keys();\n        return {\n            [iteratorSymbol]: () => this.values(),\n            next: () => {\n                const result = iterator.next();\n                if (result.done)\n                    return result;\n                const value = this.get(result.value);\n                return {\n                    done: false,\n                    value,\n                };\n            },\n        };\n    },\n    entries() {\n        const iterator = this.keys();\n        return {\n            [iteratorSymbol]: () => this.entries(),\n            next: () => {\n                const result = iterator.next();\n                if (result.done)\n                    return result;\n                const value = this.get(result.value);\n                return {\n                    done: false,\n                    value: [result.value, value],\n                };\n            },\n        };\n    },\n    [iteratorSymbol]() {\n        return this.entries();\n    },\n};\nconst mapHandlerKeys = Reflect.ownKeys(mapHandler);\n\nconst getNextIterator = (target, iterator, { isValuesIterator }) => () => {\n    var _a, _b;\n    const result = iterator.next();\n    if (result.done)\n        return result;\n    const key = result.value;\n    let value = target.setMap.get(key);\n    const currentDraft = getProxyDraft(value);\n    const mutable = ((_b = (_a = target.options).mark) === null || _b === void 0 ? void 0 : _b.call(_a, value, dataTypes)) === dataTypes.mutable;\n    if (target.options.strict) {\n        checkReadable(key, target.options, mutable);\n    }\n    if (!mutable &&\n        !currentDraft &&\n        isDraftable(key, target.options) &&\n        !target.finalized &&\n        target.original.has(key)) {\n        // draft a draftable original set item\n        const proxy = internal.createDraft({\n            original: key,\n            parentDraft: target,\n            key,\n            finalities: target.finalities,\n            options: target.options,\n        });\n        target.setMap.set(key, proxy);\n        value = proxy;\n    }\n    else if (currentDraft) {\n        // drafted\n        value = currentDraft.proxy;\n    }\n    return {\n        done: false,\n        value: isValuesIterator ? value : [value, value],\n    };\n};\nconst setHandler = {\n    get size() {\n        const target = getProxyDraft(this);\n        return target.setMap.size;\n    },\n    has(value) {\n        const target = getProxyDraft(this);\n        // reassigned or non-draftable values\n        if (target.setMap.has(value))\n            return true;\n        ensureShallowCopy(target);\n        const valueProxyDraft = getProxyDraft(value);\n        // drafted\n        if (valueProxyDraft && target.setMap.has(valueProxyDraft.original))\n            return true;\n        return false;\n    },\n    add(value) {\n        const target = getProxyDraft(this);\n        if (!this.has(value)) {\n            ensureShallowCopy(target);\n            markChanged(target);\n            target.assignedMap.set(value, true);\n            target.setMap.set(value, value);\n            markFinalization(target, value, value, generatePatches);\n        }\n        return this;\n    },\n    delete(value) {\n        if (!this.has(value)) {\n            return false;\n        }\n        const target = getProxyDraft(this);\n        ensureShallowCopy(target);\n        markChanged(target);\n        const valueProxyDraft = getProxyDraft(value);\n        if (valueProxyDraft && target.setMap.has(valueProxyDraft.original)) {\n            // delete drafted\n            target.assignedMap.set(valueProxyDraft.original, false);\n            return target.setMap.delete(valueProxyDraft.original);\n        }\n        if (!valueProxyDraft && target.setMap.has(value)) {\n            // non-draftable values\n            target.assignedMap.set(value, false);\n        }\n        else {\n            // reassigned\n            target.assignedMap.delete(value);\n        }\n        // delete reassigned or non-draftable values\n        return target.setMap.delete(value);\n    },\n    clear() {\n        if (!this.size)\n            return;\n        const target = getProxyDraft(this);\n        ensureShallowCopy(target);\n        markChanged(target);\n        for (const value of target.original) {\n            target.assignedMap.set(value, false);\n        }\n        target.setMap.clear();\n    },\n    values() {\n        const target = getProxyDraft(this);\n        ensureShallowCopy(target);\n        const iterator = target.setMap.keys();\n        return {\n            [Symbol.iterator]: () => this.values(),\n            next: getNextIterator(target, iterator, { isValuesIterator: true }),\n        };\n    },\n    entries() {\n        const target = getProxyDraft(this);\n        ensureShallowCopy(target);\n        const iterator = target.setMap.keys();\n        return {\n            [Symbol.iterator]: () => this.entries(),\n            next: getNextIterator(target, iterator, {\n                isValuesIterator: false,\n            }),\n        };\n    },\n    keys() {\n        return this.values();\n    },\n    [iteratorSymbol]() {\n        return this.values();\n    },\n    forEach(callback, thisArg) {\n        const iterator = this.values();\n        let result = iterator.next();\n        while (!result.done) {\n            callback.call(thisArg, result.value, result.value, this);\n            result = iterator.next();\n        }\n    },\n};\nconst setHandlerKeys = Reflect.ownKeys(setHandler);\n\nconst proxyHandler = {\n    get(target, key, receiver) {\n        var _a;\n        if (key === PROXY_DRAFT)\n            return target;\n        let markResult;\n        if (target.options.mark) {\n            // handle `Uncaught TypeError: Method get Map.prototype.size called on incompatible receiver #<Map>`\n            // or `Uncaught TypeError: Method get Set.prototype.size called on incompatible receiver #<Set>`\n            const value = key === 'size' &&\n                (target.original instanceof Map || target.original instanceof Set)\n                ? Reflect.get(target.original, key)\n                : Reflect.get(target.original, key, receiver);\n            markResult = target.options.mark(value, dataTypes);\n            if (markResult === dataTypes.mutable) {\n                if (target.options.strict) {\n                    checkReadable(value, target.options, true);\n                }\n                return value;\n            }\n        }\n        const source = latest(target);\n        if (source instanceof Map && mapHandlerKeys.includes(key)) {\n            if (key === 'size') {\n                return Object.getOwnPropertyDescriptor(mapHandler, 'size').get.call(target.proxy);\n            }\n            const handle = mapHandler[key];\n            if (handle) {\n                return handle.bind(target.proxy);\n            }\n        }\n        if (source instanceof Set && setHandlerKeys.includes(key)) {\n            if (key === 'size') {\n                return Object.getOwnPropertyDescriptor(setHandler, 'size').get.call(target.proxy);\n            }\n            const handle = setHandler[key];\n            if (handle) {\n                return handle.bind(target.proxy);\n            }\n        }\n        if (!has(source, key)) {\n            const desc = getDescriptor(source, key);\n            return desc\n                ? `value` in desc\n                    ? desc.value\n                    : // !case: support for getter\n                        (_a = desc.get) === null || _a === void 0 ? void 0 : _a.call(target.proxy)\n                : undefined;\n        }\n        const value = source[key];\n        if (target.options.strict) {\n            checkReadable(value, target.options);\n        }\n        if (target.finalized || !isDraftable(value, target.options)) {\n            return value;\n        }\n        // Ensure that the assigned values are not drafted\n        if (value === peek(target.original, key)) {\n            ensureShallowCopy(target);\n            target.copy[key] = createDraft({\n                original: target.original[key],\n                parentDraft: target,\n                key: target.type === 1 /* DraftType.Array */ ? Number(key) : key,\n                finalities: target.finalities,\n                options: target.options,\n            });\n            // !case: support for custom shallow copy function\n            if (typeof markResult === 'function') {\n                const subProxyDraft = getProxyDraft(target.copy[key]);\n                ensureShallowCopy(subProxyDraft);\n                // Trigger a custom shallow copy to update to a new copy\n                markChanged(subProxyDraft);\n                return subProxyDraft.copy;\n            }\n            return target.copy[key];\n        }\n        return value;\n    },\n    set(target, key, value) {\n        var _a;\n        if (target.type === 3 /* DraftType.Set */ || target.type === 2 /* DraftType.Map */) {\n            throw new Error(`Map/Set draft does not support any property assignment.`);\n        }\n        if (target.type === 1 /* DraftType.Array */ &&\n            key !== 'length' &&\n            isNaN(Number(key))) {\n            throw new Error(`Only supports setting array indices and the 'length' property.`);\n        }\n        const desc = getDescriptor(latest(target), key);\n        if (desc === null || desc === void 0 ? void 0 : desc.set) {\n            // !case: cover the case of setter\n            desc.set.call(target.proxy, value);\n            return true;\n        }\n        const current = peek(latest(target), key);\n        const currentProxyDraft = getProxyDraft(current);\n        if (currentProxyDraft && isEqual(currentProxyDraft.original, value)) {\n            // !case: ignore the case of assigning the original draftable value to a draft\n            target.copy[key] = value;\n            target.assignedMap = (_a = target.assignedMap) !== null && _a !== void 0 ? _a : new Map();\n            target.assignedMap.set(key, false);\n            return true;\n        }\n        // !case: handle new props with value 'undefined'\n        if (isEqual(value, current) &&\n            (value !== undefined || has(target.original, key)))\n            return true;\n        ensureShallowCopy(target);\n        markChanged(target);\n        if (has(target.original, key) && isEqual(value, target.original[key])) {\n            // !case: handle the case of assigning the original non-draftable value to a draft\n            target.assignedMap.delete(key);\n        }\n        else {\n            target.assignedMap.set(key, true);\n        }\n        target.copy[key] = value;\n        markFinalization(target, key, value, generatePatches);\n        return true;\n    },\n    has(target, key) {\n        return key in latest(target);\n    },\n    ownKeys(target) {\n        return Reflect.ownKeys(latest(target));\n    },\n    getOwnPropertyDescriptor(target, key) {\n        const source = latest(target);\n        const descriptor = Reflect.getOwnPropertyDescriptor(source, key);\n        if (!descriptor)\n            return descriptor;\n        return {\n            writable: true,\n            configurable: target.type !== 1 /* DraftType.Array */ || key !== 'length',\n            enumerable: descriptor.enumerable,\n            value: source[key],\n        };\n    },\n    getPrototypeOf(target) {\n        return Reflect.getPrototypeOf(target.original);\n    },\n    setPrototypeOf() {\n        throw new Error(`Cannot call 'setPrototypeOf()' on drafts`);\n    },\n    defineProperty() {\n        throw new Error(`Cannot call 'defineProperty()' on drafts`);\n    },\n    deleteProperty(target, key) {\n        var _a;\n        if (target.type === 1 /* DraftType.Array */) {\n            return proxyHandler.set.call(this, target, key, undefined, target.proxy);\n        }\n        if (peek(target.original, key) !== undefined || key in target.original) {\n            // !case: delete an existing key\n            ensureShallowCopy(target);\n            markChanged(target);\n            target.assignedMap.set(key, false);\n        }\n        else {\n            target.assignedMap = (_a = target.assignedMap) !== null && _a !== void 0 ? _a : new Map();\n            // The original non-existent key has been deleted\n            target.assignedMap.delete(key);\n        }\n        if (target.copy)\n            delete target.copy[key];\n        return true;\n    },\n};\nfunction createDraft(createDraftOptions) {\n    const { original, parentDraft, key, finalities, options } = createDraftOptions;\n    const type = getType(original);\n    const proxyDraft = {\n        type,\n        finalized: false,\n        parent: parentDraft,\n        original,\n        copy: null,\n        proxy: null,\n        finalities,\n        options,\n        // Mapping of draft Set items to their corresponding draft values.\n        setMap: type === 3 /* DraftType.Set */\n            ? new Map(original.entries())\n            : undefined,\n    };\n    // !case: undefined as a draft map key\n    if (key || 'key' in createDraftOptions) {\n        proxyDraft.key = key;\n    }\n    const { proxy, revoke } = Proxy.revocable(type === 1 /* DraftType.Array */ ? Object.assign([], proxyDraft) : proxyDraft, proxyHandler);\n    finalities.revoke.push(revoke);\n    proxyDraft.proxy = proxy;\n    if (parentDraft) {\n        const target = parentDraft;\n        target.finalities.draft.push((patches, inversePatches) => {\n            var _a, _b;\n            const oldProxyDraft = getProxyDraft(proxy);\n            // if target is a Set draft, `setMap` is the real Set copies proxy mapping.\n            let copy = target.type === 3 /* DraftType.Set */ ? target.setMap : target.copy;\n            const draft = get(copy, key);\n            const proxyDraft = getProxyDraft(draft);\n            if (proxyDraft) {\n                // assign the updated value to the copy object\n                let updatedValue = proxyDraft.original;\n                if (proxyDraft.operated) {\n                    updatedValue = getValue(draft);\n                }\n                finalizeSetValue(proxyDraft);\n                finalizePatches(proxyDraft, generatePatches, patches, inversePatches);\n                if (target.options.enableAutoFreeze) {\n                    target.options.updatedValues =\n                        (_a = target.options.updatedValues) !== null && _a !== void 0 ? _a : new WeakMap();\n                    target.options.updatedValues.set(updatedValue, proxyDraft.original);\n                }\n                // final update value\n                set(copy, key, updatedValue);\n            }\n            // !case: handle the deleted key\n            (_b = oldProxyDraft.callbacks) === null || _b === void 0 ? void 0 : _b.forEach((callback) => {\n                callback(patches, inversePatches);\n            });\n        });\n    }\n    else {\n        // !case: handle the root draft\n        const target = getProxyDraft(proxy);\n        target.finalities.draft.push((patches, inversePatches) => {\n            finalizeSetValue(target);\n            finalizePatches(target, generatePatches, patches, inversePatches);\n        });\n    }\n    return proxy;\n}\ninternal.createDraft = createDraft;\nfunction finalizeDraft(result, returnedValue, patches, inversePatches, enableAutoFreeze) {\n    var _a;\n    const proxyDraft = getProxyDraft(result);\n    const original = (_a = proxyDraft === null || proxyDraft === void 0 ? void 0 : proxyDraft.original) !== null && _a !== void 0 ? _a : result;\n    const hasReturnedValue = !!returnedValue.length;\n    if (proxyDraft === null || proxyDraft === void 0 ? void 0 : proxyDraft.operated) {\n        while (proxyDraft.finalities.draft.length > 0) {\n            const finalize = proxyDraft.finalities.draft.pop();\n            finalize(patches, inversePatches);\n        }\n    }\n    const state = hasReturnedValue\n        ? returnedValue[0]\n        : proxyDraft\n            ? proxyDraft.operated\n                ? proxyDraft.copy\n                : proxyDraft.original\n            : result;\n    if (proxyDraft)\n        revokeProxy(proxyDraft);\n    if (enableAutoFreeze) {\n        deepFreeze(state, state, proxyDraft === null || proxyDraft === void 0 ? void 0 : proxyDraft.options.updatedValues);\n    }\n    return [\n        state,\n        patches && hasReturnedValue\n            ? [{ op: Operation.Replace, path: [], value: returnedValue[0] }]\n            : patches,\n        inversePatches && hasReturnedValue\n            ? [{ op: Operation.Replace, path: [], value: original }]\n            : inversePatches,\n    ];\n}\n\nfunction draftify(baseState, options) {\n    var _a;\n    const finalities = {\n        draft: [],\n        revoke: [],\n        handledSet: new WeakSet(),\n    };\n    let patches;\n    let inversePatches;\n    if (options.enablePatches) {\n        patches = [];\n        inversePatches = [];\n    }\n    const isMutable = ((_a = options.mark) === null || _a === void 0 ? void 0 : _a.call(options, baseState, dataTypes)) === dataTypes.mutable ||\n        !isDraftable(baseState, options);\n    const draft = isMutable\n        ? baseState\n        : createDraft({\n            original: baseState,\n            parentDraft: null,\n            finalities,\n            options,\n        });\n    return [\n        draft,\n        (returnedValue = []) => {\n            const [finalizedState, finalizedPatches, finalizedInversePatches] = finalizeDraft(draft, returnedValue, patches, inversePatches, options.enableAutoFreeze);\n            return (options.enablePatches\n                ? [finalizedState, finalizedPatches, finalizedInversePatches]\n                : finalizedState);\n        },\n    ];\n}\n\nfunction handleReturnValue(options) {\n    const { rootDraft, value, useRawReturn = false, isRoot = true } = options;\n    forEach(value, (key, item, source) => {\n        const proxyDraft = getProxyDraft(item);\n        // just handle the draft which is created by the same rootDraft\n        if (proxyDraft &&\n            rootDraft &&\n            proxyDraft.finalities === rootDraft.finalities) {\n            options.isContainDraft = true;\n            const currentValue = proxyDraft.original;\n            // final update value, but just handle return value\n            if (source instanceof Set) {\n                const arr = Array.from(source);\n                source.clear();\n                arr.forEach((_item) => source.add(key === _item ? currentValue : _item));\n            }\n            else {\n                set(source, key, currentValue);\n            }\n        }\n        else if (typeof item === 'object' && item !== null) {\n            options.value = item;\n            options.isRoot = false;\n            handleReturnValue(options);\n        }\n    });\n    if (isRoot) {\n        if (!options.isContainDraft)\n            console.warn(`The return value does not contain any draft, please use 'rawReturn()' to wrap the return value to improve performance.`);\n        if (useRawReturn) {\n            console.warn(`The return value contains drafts, please don't use 'rawReturn()' to wrap the return value.`);\n        }\n    }\n}\nfunction getCurrent(target) {\n    const proxyDraft = getProxyDraft(target);\n    if (!isDraftable(target, proxyDraft === null || proxyDraft === void 0 ? void 0 : proxyDraft.options))\n        return target;\n    const type = getType(target);\n    if (proxyDraft && !proxyDraft.operated)\n        return proxyDraft.original;\n    if (proxyDraft)\n        proxyDraft.finalized = true;\n    let currentValue;\n    try {\n        currentValue =\n            type === 2 /* DraftType.Map */\n                ? new Map(target)\n                : type === 3 /* DraftType.Set */\n                    ? Array.from(proxyDraft.setMap.values())\n                    : shallowCopy(target, proxyDraft === null || proxyDraft === void 0 ? void 0 : proxyDraft.options);\n    }\n    finally {\n        if (proxyDraft)\n            proxyDraft.finalized = false;\n    }\n    forEach(currentValue, (key, value) => {\n        if (proxyDraft && isEqual(get(proxyDraft.original, key), value))\n            return;\n        set(currentValue, key, getCurrent(value));\n    });\n    return type === 3 /* DraftType.Set */ ? new Set(currentValue) : currentValue;\n}\n/**\n * `current(draft)` to get current state in the draft mutation function.\n *\n * ## Example\n *\n * ```ts\n * import { create, current } from '../index';\n *\n * const baseState = { foo: { bar: 'str' }, arr: [] };\n * const state = create(\n *   baseState,\n *   (draft) => {\n *     draft.foo.bar = 'str2';\n *     expect(current(draft.foo)).toEqual({ bar: 'str2' });\n *   },\n * );\n * ```\n */\nfunction current(target) {\n    if (!isDraft(target)) {\n        throw new Error(`current() is only used for Draft, parameter: ${target}`);\n    }\n    return getCurrent(target);\n}\n\n/**\n * `makeCreator(options)` to make a creator function.\n *\n * ## Example\n *\n * ```ts\n * import { makeCreator } from '../index';\n *\n * const baseState = { foo: { bar: 'str' }, arr: [] };\n * const create = makeCreator({ enableAutoFreeze: true });\n * const state = create(\n *   baseState,\n *   (draft) => {\n *     draft.foo.bar = 'str2';\n *   },\n * );\n *\n * expect(state).toEqual({ foo: { bar: 'str2' }, arr: [] });\n * expect(state).not.toBe(baseState);\n * expect(state.foo).not.toBe(baseState.foo);\n * expect(state.arr).toBe(baseState.arr);\n * expect(Object.isFrozen(state)).toBeTruthy();\n * ```\n */\nconst makeCreator = (arg) => {\n    if (arg !== undefined &&\n        Object.prototype.toString.call(arg) !== '[object Object]') {\n        throw new Error(`Invalid options: ${String(arg)}, 'options' should be an object.`);\n    }\n    return function create(arg0, arg1, arg2) {\n        var _a, _b, _c;\n        if (typeof arg0 === 'function' && typeof arg1 !== 'function') {\n            return function (base, ...args) {\n                return create(base, (draft) => arg0.call(this, draft, ...args), arg1);\n            };\n        }\n        const base = arg0;\n        const mutate = arg1;\n        let options = arg2;\n        if (typeof arg1 !== 'function') {\n            options = arg1;\n        }\n        if (options !== undefined &&\n            Object.prototype.toString.call(options) !== '[object Object]') {\n            throw new Error(`Invalid options: ${options}, 'options' should be an object.`);\n        }\n        options = Object.assign(Object.assign({}, arg), options);\n        const state = isDraft(base) ? current(base) : base;\n        const mark = Array.isArray(options.mark)\n            ? ((value, types) => {\n                for (const mark of options.mark) {\n                    if (typeof mark !== 'function') {\n                        throw new Error(`Invalid mark: ${mark}, 'mark' should be a function.`);\n                    }\n                    const result = mark(value, types);\n                    if (result) {\n                        return result;\n                    }\n                }\n                return;\n            })\n            : options.mark;\n        const enablePatches = (_a = options.enablePatches) !== null && _a !== void 0 ? _a : false;\n        const strict = (_b = options.strict) !== null && _b !== void 0 ? _b : false;\n        const enableAutoFreeze = (_c = options.enableAutoFreeze) !== null && _c !== void 0 ? _c : false;\n        const _options = {\n            enableAutoFreeze,\n            mark,\n            strict,\n            enablePatches,\n        };\n        if (!isDraftable(state, _options) &&\n            typeof state === 'object' &&\n            state !== null) {\n            throw new Error(`Invalid base state: create() only supports plain objects, arrays, Set, Map or using mark() to mark the state as immutable.`);\n        }\n        const [draft, finalize] = draftify(state, _options);\n        if (typeof arg1 !== 'function') {\n            if (!isDraftable(state, _options)) {\n                throw new Error(`Invalid base state: create() only supports plain objects, arrays, Set, Map or using mark() to mark the state as immutable.`);\n            }\n            return [draft, finalize];\n        }\n        let result;\n        try {\n            result = mutate(draft);\n        }\n        catch (error) {\n            revokeProxy(getProxyDraft(draft));\n            throw error;\n        }\n        const returnValue = (value) => {\n            const proxyDraft = getProxyDraft(draft);\n            if (!isDraft(value)) {\n                if (value !== undefined &&\n                    !isEqual(value, draft) &&\n                    (proxyDraft === null || proxyDraft === void 0 ? void 0 : proxyDraft.operated)) {\n                    throw new Error(`Either the value is returned as a new non-draft value, or only the draft is modified without returning any value.`);\n                }\n                const rawReturnValue = value === null || value === void 0 ? void 0 : value[RAW_RETURN_SYMBOL];\n                if (rawReturnValue) {\n                    const _value = rawReturnValue[0];\n                    if (_options.strict && typeof value === 'object' && value !== null) {\n                        handleReturnValue({\n                            rootDraft: proxyDraft,\n                            value,\n                            useRawReturn: true,\n                        });\n                    }\n                    return finalize([_value]);\n                }\n                if (value !== undefined) {\n                    if (typeof value === 'object' && value !== null) {\n                        handleReturnValue({ rootDraft: proxyDraft, value });\n                    }\n                    return finalize([value]);\n                }\n            }\n            if (value === draft || value === undefined) {\n                return finalize([]);\n            }\n            const returnedProxyDraft = getProxyDraft(value);\n            if (_options === returnedProxyDraft.options) {\n                if (returnedProxyDraft.operated) {\n                    throw new Error(`Cannot return a modified child draft.`);\n                }\n                return finalize([current(value)]);\n            }\n            return finalize([value]);\n        };\n        if (result instanceof Promise) {\n            return result.then(returnValue, (error) => {\n                revokeProxy(getProxyDraft(draft));\n                throw error;\n            });\n        }\n        return returnValue(result);\n    };\n};\n\n/**\n * `create(baseState, callback, options)` to create the next state\n *\n * ## Example\n *\n * ```ts\n * import { create } from '../index';\n *\n * const baseState = { foo: { bar: 'str' }, arr: [] };\n * const state = create(\n *   baseState,\n *   (draft) => {\n *     draft.foo.bar = 'str2';\n *   },\n * );\n *\n * expect(state).toEqual({ foo: { bar: 'str2' }, arr: [] });\n * expect(state).not.toBe(baseState);\n * expect(state.foo).not.toBe(baseState.foo);\n * expect(state.arr).toBe(baseState.arr);\n * ```\n */\nconst create = makeCreator();\n\n/**\n * `apply(state, patches)` to apply patches to state\n *\n * ## Example\n *\n * ```ts\n * import { create, apply } from '../index';\n *\n * const baseState = { foo: { bar: 'str' }, arr: [] };\n * const [state, patches] = create(\n *   baseState,\n *   (draft) => {\n *     draft.foo.bar = 'str2';\n *   },\n *   { enablePatches: true }\n * );\n * expect(state).toEqual({ foo: { bar: 'str2' }, arr: [] });\n * expect(patches).toEqual([{ op: 'replace', path: ['foo', 'bar'], value: 'str2' }]);\n * expect(state).toEqual(apply(baseState, patches));\n * ```\n */\nfunction apply(state, patches, applyOptions) {\n    let i;\n    for (i = patches.length - 1; i >= 0; i -= 1) {\n        const { value, op, path } = patches[i];\n        if ((!path.length && op === Operation.Replace) ||\n            (path === '' && op === Operation.Add)) {\n            state = value;\n            break;\n        }\n    }\n    if (i > -1) {\n        patches = patches.slice(i + 1);\n    }\n    const mutate = (draft) => {\n        patches.forEach((patch) => {\n            const { path: _path, op } = patch;\n            const path = unescapePath(_path);\n            let base = draft;\n            for (let index = 0; index < path.length - 1; index += 1) {\n                const parentType = getType(base);\n                let key = path[index];\n                if (typeof key !== 'string' && typeof key !== 'number') {\n                    key = String(key);\n                }\n                if (((parentType === 0 /* DraftType.Object */ ||\n                    parentType === 1 /* DraftType.Array */) &&\n                    (key === '__proto__' || key === 'constructor')) ||\n                    (typeof base === 'function' && key === 'prototype')) {\n                    throw new Error(`Patching reserved attributes like __proto__ and constructor is not allowed.`);\n                }\n                // use `index` in Set draft\n                base = get(getType(base) === 3 /* DraftType.Set */ ? Array.from(base) : base, key);\n                if (typeof base !== 'object') {\n                    throw new Error(`Cannot apply patch at '${path.join('/')}'.`);\n                }\n            }\n            const type = getType(base);\n            // ensure the original patch is not modified.\n            const value = deepClone(patch.value);\n            const key = path[path.length - 1];\n            switch (op) {\n                case Operation.Replace:\n                    switch (type) {\n                        case 2 /* DraftType.Map */:\n                            return base.set(key, value);\n                        case 3 /* DraftType.Set */:\n                            throw new Error(`Cannot apply replace patch to set.`);\n                        default:\n                            return (base[key] = value);\n                    }\n                case Operation.Add:\n                    switch (type) {\n                        case 1 /* DraftType.Array */:\n                            // If the \"-\" character is used to\n                            // index the end of the array (see [RFC6901](https://datatracker.ietf.org/doc/html/rfc6902)),\n                            // this has the effect of appending the value to the array.\n                            return key === '-'\n                                ? base.push(value)\n                                : base.splice(key, 0, value);\n                        case 2 /* DraftType.Map */:\n                            return base.set(key, value);\n                        case 3 /* DraftType.Set */:\n                            return base.add(value);\n                        default:\n                            return (base[key] = value);\n                    }\n                case Operation.Remove:\n                    switch (type) {\n                        case 1 /* DraftType.Array */:\n                            return base.splice(key, 1);\n                        case 2 /* DraftType.Map */:\n                            return base.delete(key);\n                        case 3 /* DraftType.Set */:\n                            return base.delete(patch.value);\n                        default:\n                            return delete base[key];\n                    }\n                default:\n                    throw new Error(`Unsupported patch operation: ${op}.`);\n            }\n        });\n    };\n    if (isDraft(state)) {\n        if (applyOptions !== undefined) {\n            throw new Error(`Cannot apply patches with options to a draft.`);\n        }\n        mutate(state);\n        return state;\n    }\n    return create(state, mutate, Object.assign({ enablePatches: false }, applyOptions));\n}\n\n/**\n * `original(draft)` to get original state in the draft mutation function.\n *\n * ## Example\n *\n * ```ts\n * import { create, original } from '../index';\n *\n * const baseState = { foo: { bar: 'str' }, arr: [] };\n * const state = create(\n *   baseState,\n *   (draft) => {\n *     draft.foo.bar = 'str2';\n *     expect(original(draft.foo)).toEqual({ bar: 'str' });\n *   }\n * );\n * ```\n */\nfunction original(target) {\n    const proxyDraft = getProxyDraft(target);\n    if (!proxyDraft) {\n        throw new Error(`original() is only used for a draft, parameter: ${target}`);\n    }\n    return proxyDraft.original;\n}\n\n/**\n * Use rawReturn() to wrap the return value to skip the draft check and thus improve performance.\n *\n * ## Example\n *\n * ```ts\n * import { create, rawReturn } from '../index';\n *\n * const baseState = { foo: { bar: 'str' }, arr: [] };\n * const state = create(\n *   baseState,\n *   (draft) => {\n *     return rawReturn(baseState);\n *   },\n * );\n * expect(state).toBe(baseState);\n * ```\n */\nfunction rawReturn(value) {\n    if (arguments.length === 0) {\n        throw new Error('rawReturn() must be called with a value.');\n    }\n    if (arguments.length > 1) {\n        throw new Error('rawReturn() must be called with one argument.');\n    }\n    if (value !== undefined &&\n        (typeof value !== 'object' || value === null)) {\n        console.warn('rawReturn() must be called with an object(including plain object, arrays, Set, Map, etc.) or `undefined`, other types do not need to be returned via rawReturn().');\n    }\n    return {\n        [RAW_RETURN_SYMBOL]: [value],\n    };\n}\n\nconst constructorString = Object.prototype.constructor.toString();\n/**\n * Check if the value is a simple object(No prototype chain object or iframe same-origin object),\n * support case: https://github.com/unadlib/mutative/issues/17\n */\nconst isSimpleObject = (value) => {\n    if (!value || typeof value !== 'object')\n        return false;\n    const prototype = Object.getPrototypeOf(value);\n    if (prototype === null) {\n        return true;\n    }\n    const constructor = Object.hasOwnProperty.call(prototype, 'constructor') &&\n        prototype.constructor;\n    if (constructor === Object)\n        return true;\n    return (typeof constructor === 'function' &&\n        Function.toString.call(constructor) === constructorString);\n};\nconst markSimpleObject = (value) => {\n    if (isSimpleObject(value)) {\n        return dataTypes.immutable;\n    }\n    return;\n};\n\n/**\n * Cast a value to an Draft type value.\n */\nfunction castDraft(value) {\n    return value;\n}\n/**\n * Cast a value to an Immutable type value.\n */\nfunction castImmutable(value) {\n    return value;\n}\n\nexport { apply, castDraft, castImmutable, create, current, isDraft, isDraftable, makeCreator, markSimpleObject, original, rawReturn, unsafe };\n//# sourceMappingURL=mutative.esm.mjs.map\n"],"names":["index","set","generatePatches","value","current","proxyDraft","create","base","draft","mark","result"],"mappings":"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","x_google_ignoreList":[0]}