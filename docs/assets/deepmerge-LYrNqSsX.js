var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,"name",{value,configurable:!0});import{d as getDefaultExportFromCjs}from"./@babel-Da9QAQIm.js";var isMergeableObject=__name(function(value){return isNonNullObject(value)&&!isSpecial(value)},"isMergeableObject");function isNonNullObject(value){return!!value&&typeof value=="object"}__name(isNonNullObject,"isNonNullObject");function isSpecial(value){var stringValue=Object.prototype.toString.call(value);return stringValue==="[object RegExp]"||stringValue==="[object Date]"||isReactElement(value)}__name(isSpecial,"isSpecial");var canUseSymbol=typeof Symbol=="function"&&Symbol.for,REACT_ELEMENT_TYPE=canUseSymbol?Symbol.for("react.element"):60103;function isReactElement(value){return value.$$typeof===REACT_ELEMENT_TYPE}__name(isReactElement,"isReactElement");function emptyTarget(val){return Array.isArray(val)?[]:{}}__name(emptyTarget,"emptyTarget");function cloneUnlessOtherwiseSpecified(value,options){return options.clone!==!1&&options.isMergeableObject(value)?deepmerge(emptyTarget(value),value,options):value}__name(cloneUnlessOtherwiseSpecified,"cloneUnlessOtherwiseSpecified");function defaultArrayMerge(target,source,options){return target.concat(source).map(function(element){return cloneUnlessOtherwiseSpecified(element,options)})}__name(defaultArrayMerge,"defaultArrayMerge");function getMergeFunction(key,options){if(!options.customMerge)return deepmerge;var customMerge=options.customMerge(key);return typeof customMerge=="function"?customMerge:deepmerge}__name(getMergeFunction,"getMergeFunction");function getEnumerableOwnPropertySymbols(target){return Object.getOwnPropertySymbols?Object.getOwnPropertySymbols(target).filter(function(symbol){return Object.propertyIsEnumerable.call(target,symbol)}):[]}__name(getEnumerableOwnPropertySymbols,"getEnumerableOwnPropertySymbols");function getKeys(target){return Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))}__name(getKeys,"getKeys");function propertyIsOnObject(object,property){try{return property in object}catch{return!1}}__name(propertyIsOnObject,"propertyIsOnObject");function propertyIsUnsafe(target,key){return propertyIsOnObject(target,key)&&!(Object.hasOwnProperty.call(target,key)&&Object.propertyIsEnumerable.call(target,key))}__name(propertyIsUnsafe,"propertyIsUnsafe");function mergeObject(target,source,options){var destination={};return options.isMergeableObject(target)&&getKeys(target).forEach(function(key){destination[key]=cloneUnlessOtherwiseSpecified(target[key],options)}),getKeys(source).forEach(function(key){propertyIsUnsafe(target,key)||(propertyIsOnObject(target,key)&&options.isMergeableObject(source[key])?destination[key]=getMergeFunction(key,options)(target[key],source[key],options):destination[key]=cloneUnlessOtherwiseSpecified(source[key],options))}),destination}__name(mergeObject,"mergeObject");function deepmerge(target,source,options){options=options||{},options.arrayMerge=options.arrayMerge||defaultArrayMerge,options.isMergeableObject=options.isMergeableObject||isMergeableObject,options.cloneUnlessOtherwiseSpecified=cloneUnlessOtherwiseSpecified;var sourceIsArray=Array.isArray(source),targetIsArray=Array.isArray(target),sourceAndTargetTypesMatch=sourceIsArray===targetIsArray;return sourceAndTargetTypesMatch?sourceIsArray?options.arrayMerge(target,source,options):mergeObject(target,source,options):cloneUnlessOtherwiseSpecified(source,options)}__name(deepmerge,"deepmerge");deepmerge.all=__name(function(array,options){if(!Array.isArray(array))throw new Error("first argument should be an array");return array.reduce(function(prev,next){return deepmerge(prev,next,options)},{})},"deepmergeAll");var deepmerge_1=deepmerge,cjs=deepmerge_1;const merge=getDefaultExportFromCjs(cjs);export{merge as m};
//# sourceMappingURL=deepmerge-LYrNqSsX.js.map
