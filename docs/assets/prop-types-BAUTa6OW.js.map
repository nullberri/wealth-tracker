{"version":3,"file":"prop-types-BAUTa6OW.js","sources":["../../node_modules/prop-types/lib/ReactPropTypesSecret.js","../../node_modules/prop-types/factoryWithThrowingShims.js","../../node_modules/prop-types/index.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n"],"names":["ReactPropTypesSecret","require$$0","propTypesModule"],"mappings":"0MASIA,uBAAuB,+CAE3B,uBAAiBA,uBCFb,qBAAuBC,uBAE3B,SAAS,eAAgB,CAAE,CAAlB,sCACT,SAAS,wBAAyB,CAAE,CAA3B,wDACT,uBAAuB,kBAAoB,cAE3C,IAAA,yBAAiB,iBAAW,CAC1B,SAAS,KAAK,MAAO,SAAU,cAAe,SAAU,aAAc,OAAQ,CAC5E,GAAI,SAAW,qBAIf,KAAI,IAAM,IAAI,MACZ,iLAGN,EACI,UAAI,KAAO,sBACL,IACV,CAZW,oBAaT,KAAK,WAAa,KAClB,SAAS,SAAU,CACjB,OAAO,IAEX,CAHW,0BAKT,IAAI,eAAiB,CACnB,MAAO,KACP,OAAQ,KACR,KAAM,KACN,KAAM,KACN,OAAQ,KACR,OAAQ,KACR,OAAQ,KACR,OAAQ,KAER,IAAK,KACL,QAAS,QACT,QAAS,KACT,YAAa,KACb,WAAY,QACZ,KAAM,KACN,SAAU,QACV,MAAO,QACP,UAAW,QACX,MAAO,QACP,MAAO,QAEP,eAAgB,uBAChB,kBAAmB,aACvB,EAEE,sBAAe,UAAY,eAEpB,cACT,EAjDiB,4BCERC,UAAA,QAAUD","x_google_ignoreList":[0,1,2]}